{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "description": "Information about how a sequencing library was prepared.",
    "additionalProperties": false,
    "required": [
        "protocol_core",
        "library_construction_method",
        "input_nucleic_acid_molecule",
        "nucleic_acid_source",
        "end_bias",
        "strand",
        "submission_date",
        "protocol_id",
        "barcode_offset",
        "barcode_length",
        "barcode_read",
        "barcode_offset",
        "barcode_length",
        "barcode_read",
        "text",
        "text",
        "barcode_offset",
        "barcode_length",
        "barcode_read",
        "text",
        "text"
    ],
    "title": "Library preparation protocol",
    "name": "library_preparation_protocol",
    "type": "object",
    "properties": {
        "accession": {
            "description": "A unique accession for this entity, provided by the broker.",
            "type": "string",
            "user_friendly": "Accession"
        },
        "barcode_length": {
            "description": "Length of barcode in nucleotides.",
            "type": "integer",
            "maximum": 50,
            "minimum": 0,
            "example": 28,
            "user_friendly": "Barcode length"
        },
        "barcode_offset": {
            "description": "The 0-based offset of start of barcode in read.",
            "type": "integer",
            "maximum": 50,
            "minimum": 0,
            "example": 0,
            "user_friendly": "Barcode offset",
            "guidelines": "Enter 0 for beginning of read."
        },
        "barcode_read": {
            "description": "The read in which the barcode is found.",
            "type": "string",
            "enum": [
                "Read 1",
                "Read 2",
                "Read 3",
                "Read 4",
                "i7 Index",
                "i5 Index"
            ],
            "user_friendly": "Barcode-containing read",
            "example": "Should be one of: Read 1, Read 2, i7 Index, or i5 Index."
        },
        "biological_macromolecule_ontology": {
            "description": "An ontology term identifier in the form prefix:accession.",
            "type": "string",
            "graph_restriction": {
                "ontologies": [
                    "obo:efo",
                    "obo:chebi",
                    "obo:obi"
                ],
                "classes": [
                    "EFO:0004446"
                ],
                "relations": [
                    "rdfs:subClassOf"
                ],
                "direct": false,
                "include_self": false
            },
            "example": "OBI:0000869; CHEBI:33699",
            "user_friendly": "Biological macromolecule ontology ID"
        },
        "biological_macromolecule_text": {
            "description": "The name of the biological macromolecule being used.",
            "type": "string",
            "example": "polyA RNA; mRNA",
            "user_friendly": "Biological macromolecule"
        },
        "catalog_number": {
            "description": "The catalog number of the kit/reagent.",
            "type": "string",
            "example": "20014279",
            "user_friendly": "Catalog number"
        },
        "describedBy": {
            "description": "The URL reference to the schema.",
            "type": "string",
            "pattern": "https://raw.githubusercontent.com/morphic-bio/metadata-schema/main/json_schema/type/protocol/sequencing/1.0.0/library_preparation_protocol"
        },
        "end_bias": {
            "description": "The type of tag or end bias the library has.",
            "type": "string",
            "example": "Should be one of: 3 prime tag, 3 prime end bias, 5 prime tag, 5 prime end bias, or full length.",
            "enum": [
                "3 prime tag",
                "3 prime end bias",
                "5 prime tag",
                "5 prime end bias",
                "full length"
            ],
            "user_friendly": "End bias",
            "guidelines": "Enter 'full length' if there is no tag or end bias."
        },
        "expiry_date": {
            "description": "The date of expiration for the kit/reagent.",
            "type": "string",
            "example": "2018-01-31; 2018-01",
            "user_friendly": "Expiry date",
            "pattern": "^((19|20)\\d\\d){1}([- \\./][01]\\d){0,1}([- \\./][0-3]\\d){0,1}$",
            "guidelines": "Enter the date in date format: yyyy-mm-dd. Supplying partial date is allowed."
        },
        "kit_titer": {
            "description": "Appropriate titer and volume recommendations found in kit/reagent Certificate of Analysis.",
            "type": "string",
            "example": "3.0x10^7",
            "user_friendly": "Titer"
        },
        "library_amplification_ontology": {
            "description": "An ontology term identifier in the form prefix:accession.",
            "type": "string",
            "graph_restriction": {
                "ontologies": [
                    "obo:efo"
                ],
                "classes": [
                    "EFO:0009107"
                ],
                "relations": [
                    "rdfs:subClassOf"
                ],
                "direct": false,
                "include_self": false
            },
            "user_friendly": "Library amplification ontology ID",
            "example": "OBI:0000415; EFO:0009013"
        },
        "library_amplification_text": {
            "description": "The name of a library amplification approach being used.",
            "type": "string",
            "user_friendly": "Library amplification",
            "example": "PCR; in vitro transcription"
        },
        "library_construction_ontology": {
            "description": "An ontology term identifier in the form prefix:accession.",
            "type": "string",
            "graph_restriction": {
                "ontologies": [
                    "obo:efo"
                ],
                "classes": [
                    "EFO:0002772"
                ],
                "relations": [
                    "rdfs:subClassOf"
                ],
                "direct": false,
                "include_self": false
            },
            "user_friendly": "Library construction ontology ID",
            "example": "EFO:0009310; EFO:0008931"
        },
        "library_construction_text": {
            "description": "The name of a library construction approach being used.",
            "type": "string",
            "user_friendly": "Library construction",
            "example": "10X v2 sequencing; Smart-seq2"
        },
        "lot_number": {
            "description": "The batch or lot number of the kit/reagent.",
            "type": "string",
            "example": "10001A",
            "user_friendly": "Batch/lot number"
        },
        "manufacturer": {
            "description": "The manufacturer of the kit/reagent.",
            "type": "string",
            "example": "Illumina; ThermoFisher Scientific",
            "user_friendly": "Manufacturer"
        },
        "nominal_length": {
            "description": "Average (insert) size of the fragments being sequenced.",
            "type": "integer",
            "user_friendly": "Nominal length",
            "example": 250
        },
        "nominal_sdev": {
            "description": "Standard deviation of the (insert) size of the fragments being sequenced.",
            "type": "integer",
            "user_friendly": "Nominal standard deviation",
            "example": 30
        },
        "nucleic_acid_source": {
            "description": "Source cells or organelles from which nucleic acid molecules were collected.",
            "type": "string",
            "enum": [
                "bulk cell",
                "single cell",
                "single nucleus",
                "bulk nuclei",
                "mitochondria"
            ],
            "user_friendly": "Nucleic acid source",
            "example": "Should be one of: single cell, bulk cell, single nucleus, bulk nuclei, or mitochondria."
        },
        "primer": {
            "description": "Primer used for cDNA synthesis from RNA.",
            "type": "string",
            "enum": [
                "poly-dT",
                "random"
            ],
            "user_friendly": "Primer",
            "example": "Should be one of: poly-dT, or random."
        },
        "protocol_description": {
            "description": "A general description of the protocol.",
            "type": "string",
            "user_friendly": "Protocol description"
        },
        "protocol_id": {
            "description": "A unique ID for the protocol.",
            "type": "string",
            "user_friendly": "Protocol ID",
            "guidelines": "Protocol ID should have no spaces."
        },
        "protocol_name": {
            "description": "A short name for the protocol.",
            "type": "string",
            "user_friendly": "Protocol name"
        },
        "protocols_io_doi": {
            "description": "The protocols.io digital object identifier (doi) for the protocol.",
            "type": "string",
            "example": "10.17504/protocols.io.mgjc3un",
            "user_friendly": "protocols.io DOI"
        },
        "publication_doi": {
            "description": "The publication digital object identifier (doi) for the protocol.",
            "type": "string",
            "example": "10.1101/193219",
            "user_friendly": "Publication DOI"
        },
        "retail_name": {
            "description": "The retail name of the kit/reagent.",
            "type": "string",
            "example": "SureCell WTA 3' Library Prep Kit; CytoTune iPS 2.0 Sendai Reprogramming Kit",
            "user_friendly": "Retail name"
        },
        "schema_major_version": {
            "description": "The major version number of the schema.",
            "type": "integer",
            "pattern": "^[0-9]{1,}$",
            "user_friendly": "Schema major version",
            "example": "4; 10"
        },
        "schema_minor_version": {
            "description": "The minor version number of the schema.",
            "type": "integer",
            "pattern": "^[0-9]{1,}$",
            "user_friendly": "Schema minor version",
            "example": "6; 15"
        },
        "schema_type": {
            "description": "The type of the metadata schema entity.",
            "type": "string",
            "enum": [
                "protocol"
            ]
        },
        "schema_version": {
            "description": "The version number of the schema in major.minor.patch format.",
            "type": "string",
            "pattern": "^[0-9]{1,}.[0-9]{1,}.[0-9]{1,}$",
            "example": "4.6.1"
        },
        "spike_in_dilution": {
            "description": "Dilution of spike-in.",
            "type": "integer",
            "maximum": 1000000,
            "minimum": 1,
            "user_friendly": "Spike-in dilution",
            "example": 100
        },
        "strand": {
            "description": "Library strandedness.",
            "type": "string",
            "enum": [
                "first",
                "second",
                "unstranded",
                "not provided"
            ],
            "example": "Should be one of: first, second, unstranded, or not provided.",
            "user_friendly": "Strand",
            "guidelines": "Enter 'first' if sequenced molecule is only the strand generated during first strand synthesis. Enter 'second' if sequenced molecule is only the strand generated during second strand synthesis. Enter 'unstranded' if both strands were sequenced."
        },
        "submission_date": {
            "description": "When project was first submitted to database.",
            "type": "string",
            "format": "date-time",
            "user_friendly": "Submission date"
        },
        "submitter_id": {
            "description": "ID of individual who first submitted project.",
            "type": "string",
            "user_friendly": "Submitter ID"
        },
        "update_date": {
            "description": "When project was last updated.",
            "type": "string",
            "format": "date-time",
            "user_friendly": "Update date"
        },
        "updater_id": {
            "description": "ID of individual who last updated project.",
            "type": "string",
            "user_friendly": "Updater ID"
        },
        "white_list_file": {
            "description": "Name of file containing legitimate barcode sequences.",
            "type": "string",
            "guidelines": "Unused for randomly generated barcodes.",
            "user_friendly": "White list barcode file",
            "example": "barcode_whitelist_file.txt"
        }
    }
}